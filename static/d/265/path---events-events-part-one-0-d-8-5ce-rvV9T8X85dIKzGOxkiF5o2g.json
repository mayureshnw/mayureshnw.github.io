{"data":{"site":{"siteMetadata":{"title":"Tech Bites","author":"Mayuresh Waykole","siteUrl":"https://mwaykole.github.io/"}},"markdownRemark":{"id":"71fd72dc-f69f-5b39-917b-f04eb124a720","excerpt":"In this post, we will explore what events are, how they are used and the advantages. Throughout the post we will build our way up to a complete event drivenâ€¦","html":"<p>In this post, we will explore what events are, how they are used and the advantages. Throughout the post we will build our way up to a complete event driven program.\nWe will use python do this, since python has no inherent way to handle events. This means we need to build everything from scratch.</p>\n<h3>Events</h3>\n<p><code class=\"language-text\">Events</code> in the simplest terms are notifications.\nSoftware written such that it largely relies on events for communication is said to be <code class=\"language-text\">Event Driven</code></p>\n<p>The most common operations to do with an event are</p>\n<ul>\n<li>Listen</li>\n<li>Emit</li>\n</ul>\n<p>A program that would like to take some action when an event has occured, <code class=\"language-text\">listens</code> for that event.</p>\n<p>A program <code class=\"language-text\">Emits</code> an Event when it would like to notify that some change has occured.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Events.py</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">emit</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># doSomething</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># doSomething</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>This is what our test code looks like. We will build this as well going ahead.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># events.test.py</span>\n\n<span class=\"token keyword\">import</span> Events <span class=\"token keyword\">as</span> E\n\n<span class=\"token comment\"># Does nothing yet.</span>\n<span class=\"token comment\"># Expectation: to be triggered when the event occurs.</span>\nE<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token string\">'FIRST_EVENT'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Does nothing yet.</span>\n<span class=\"token comment\"># Expectation: to trigger the listener.</span>\nE<span class=\"token punctuation\">.</span>emit<span class=\"token punctuation\">(</span><span class=\"token string\">'FIRST_EVENT'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Now that we have the general streucture of the code, lets define the behaviour.</p>\n<p>Event library is supposed to facilitate real time communication.</p>\n<blockquote>\n<p>The execution flow is defined by the events and  <code class=\"language-text\">NOT by the order in which code is written</code></p>\n</blockquote>\n<p>What this means is that any listener listening on <code class=\"language-text\">FIRST_EVENT</code> will be triggered when that event is emitted. To do this, our listeners have to first let us know what they are listening on. Usually, the listener wants to run some code when an event occurs. This code can be put in a function, referred to as a <code class=\"language-text\">callback</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># events.test.py</span>\n\n<span class=\"token keyword\">import</span> Events <span class=\"token keyword\">as</span> E\n\n<span class=\"token comment\"># this is the callback function</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">printData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"some event occured\"</span><span class=\"token punctuation\">)</span>\n\nE<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token string\">'FIRST_EVENT'</span><span class=\"token punctuation\">,</span> printData<span class=\"token punctuation\">)</span>\n\nE<span class=\"token punctuation\">.</span>emit<span class=\"token punctuation\">(</span><span class=\"token string\">'FIRST_EVENT'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>An event can have multiple listeners.</p>\n</blockquote>\n<p>So a good data structure to use will be a HashMap/Dictionary in python.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Events.py</span>\n\n<span class=\"token comment\"># maps event to a list of listeners</span>\nEventListenerMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">emit</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># doSomething</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> event <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> EventListenerMap<span class=\"token punctuation\">:</span>\n        EventListenerMap<span class=\"token punctuation\">[</span>event<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    EventListenerMap<span class=\"token punctuation\">[</span>event<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append\n    <span class=\"token comment\"># doSomething</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"Event Driven Programming","date":"May 01, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/events/events-part-one/","previous":null,"next":null}}